{"ast":null,"code":"import _slicedToArray from\"/home/sbneelu/Programming/ppq-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./module.scss\";import{getSectionColor,getQuestionsForModule}from\"../../utils/utils\";import Graph,{attemptsToGraphData}from\"../Graph\";import QuestionListWindow from\"./QuestionListWindow\";import{useEffect,useState}from\"react\";import{Row,Col,Button}from\"reactstrap\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faChevronLeft}from\"@fortawesome/free-solid-svg-icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function formatDate(date){var MONTHS=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];return\"\".concat(date.getDate(),\" \").concat(MONTHS[date.getMonth()],\" \").concat(date.getFullYear());}var Module=function Module(_ref){var module=_ref.module,attempts=_ref.attempts,navigate=_ref.navigate,openAttemptWindow=_ref.openAttemptWindow,openBlankWindow=_ref.openBlankWindow,closeBlankWindow=_ref.closeBlankWindow;var _useState=useState(attemptsToGraphData(attempts)),_useState2=_slicedToArray(_useState,2),graphData=_useState2[0],setGraphData=_useState2[1];useEffect(function(){setGraphData(attemptsToGraphData(attempts));},[attempts]);function showUnattemptedQuestions(){var moduleQuestions=getQuestionsForModule(module);if(!moduleQuestions)return;var attemptedQuestions=attempts.map(function(attempt){return attempt.question.id;});var unattemptedQuestions=moduleQuestions.filter(function(q){return attemptedQuestions.indexOf(q)===-1;});openBlankWindow(\"Unattempted questions\",/*#__PURE__*/_jsx(QuestionListWindow,{questions:unattemptedQuestions,closeWindow:closeBlankWindow}));}var atts=attempts.map(function(_ref2){var id=_ref2.id,date=_ref2.date,mark=_ref2.mark,question=_ref2.question,attemptNumber=_ref2.attemptNumber;return{id:id,mark:mark,question:question,attemptNumber:attemptNumber,date:date,dateCompleted:new Date(date)};});atts.sort(function(a,b){return a.dateCompleted<b.dateCompleted?1:a.dateCompleted>b.dateCompleted?-1:0;});return/*#__PURE__*/_jsxs(\"div\",{className:\"module page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-btn\",onClick:function onClick(){return navigate(\"home\");},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"icon\",icon:faChevronLeft})}),/*#__PURE__*/_jsx(\"div\",{children:module})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[atts.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-attempts-outer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"primary-btn unattempted-btn\",children:/*#__PURE__*/_jsx(Button,{onClick:showUnattemptedQuestions,children:\"View Unattempted Questions\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"no-attempts-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"no-attempts\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"No data for this module.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtitle\",children:\"Add a question attempt to see statistics.\"})]})})]}),atts.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"card graph-card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"graph\",children:/*#__PURE__*/_jsx(Graph,{graphData:graphData})})}),/*#__PURE__*/_jsx(\"div\",{className:\"primary-btn unattempted-btn\",children:/*#__PURE__*/_jsx(Button,{onClick:showUnattemptedQuestions,children:\"View Unattempted Questions\"})}),/*#__PURE__*/_jsx(Row,{className:\"items\",children:atts.map(function(attempt){return/*#__PURE__*/_jsx(Col,{xs:12,sm:6,md:4,lg:3,xl:2,children:/*#__PURE__*/_jsxs(\"div\",{className:\"card item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[attempt.question.year,\" P\",attempt.question.paper,\" Q\",attempt.question.question]}),/*#__PURE__*/_jsxs(\"div\",{className:\"subtitle\",children:[\"Completed\",\" \",formatDate(attempt.dateCompleted)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sections\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"first section \".concat(getSectionColor(attempt.mark,20)),children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-title\",children:\"Mark\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[attempt.mark,\"/20\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"second section blue\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-title\",children:\"Attempt\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[attempt.attemptNumber+1,\" \",\"of\",\" \",attempts.filter(function(a){return a.question.id===attempt.question.id;}).sort(function(a,b){return a.attemptNumber>b.attemptNumber?-1:1;})[0].attemptNumber+1]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"btns\",children:/*#__PURE__*/_jsx(\"div\",{className:\"primary-btn button\",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return openAttemptWindow(attempt);},children:\"Edit Attempt\"})})})]})});})})]})]})]});};export default Module;","map":{"version":3,"sources":["/home/sbneelu/Programming/ppq-tracker/src/components/Module/Module.tsx"],"names":["getSectionColor","getQuestionsForModule","Graph","attemptsToGraphData","QuestionListWindow","useEffect","useState","Row","Col","Button","FontAwesomeIcon","faChevronLeft","formatDate","date","MONTHS","getDate","getMonth","getFullYear","Module","module","attempts","navigate","openAttemptWindow","openBlankWindow","closeBlankWindow","graphData","setGraphData","showUnattemptedQuestions","moduleQuestions","attemptedQuestions","map","attempt","question","id","unattemptedQuestions","filter","q","indexOf","atts","mark","attemptNumber","dateCompleted","Date","sort","a","b","length","year","paper"],"mappings":"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","sourcesContent":["import \"./module.scss\";\n\nimport { Route } from \"../../App\";\nimport {\n    QuestionAttempt,\n    getSectionColor,\n    getQuestionsForModule,\n} from \"../../utils/utils\";\nimport Graph, { attemptsToGraphData } from \"../Graph\";\nimport QuestionListWindow from \"./QuestionListWindow\";\n\nimport { FC, ReactNode, useEffect, useState } from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n    module: string;\n    attempts: QuestionAttempt[];\n    navigate: (route: Route) => void;\n    openAttemptWindow: (arg: Attempt) => void;\n    openBlankWindow: (title: string, node: ReactNode) => void;\n    closeBlankWindow: () => void;\n}\n\ninterface Attempt extends QuestionAttempt {\n    dateCompleted: Date;\n}\n\nfunction formatDate(date: Date) {\n    const MONTHS = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n    ];\n    return `${date.getDate()} ${MONTHS[date.getMonth()]} ${date.getFullYear()}`;\n}\n\nconst Module: FC<Props> = ({\n    module,\n    attempts,\n    navigate,\n    openAttemptWindow,\n    openBlankWindow,\n    closeBlankWindow,\n}) => {\n    const [graphData, setGraphData] = useState(attemptsToGraphData(attempts));\n\n    useEffect(() => {\n        setGraphData(attemptsToGraphData(attempts));\n    }, [attempts]);\n\n    function showUnattemptedQuestions() {\n        const moduleQuestions = getQuestionsForModule(module);\n        if (!moduleQuestions) return;\n        const attemptedQuestions = attempts.map(\n            (attempt) => attempt.question.id\n        );\n        const unattemptedQuestions = moduleQuestions.filter(\n            (q) => attemptedQuestions.indexOf(q) === -1\n        );\n        openBlankWindow(\n            \"Unattempted questions\",\n            <QuestionListWindow\n                questions={unattemptedQuestions}\n                closeWindow={closeBlankWindow}\n            />\n        );\n    }\n\n    const atts: Attempt[] = attempts.map(\n        ({ id, date, mark, question, attemptNumber }) => {\n            return {\n                id,\n                mark,\n                question,\n                attemptNumber,\n                date,\n                dateCompleted: new Date(date),\n            };\n        }\n    );\n\n    atts.sort((a, b) =>\n        a.dateCompleted < b.dateCompleted\n            ? 1\n            : a.dateCompleted > b.dateCompleted\n            ? -1\n            : 0\n    );\n\n    return (\n        <div className=\"module page\">\n            <div className=\"header\">\n                <button className=\"back-btn\" onClick={() => navigate(\"home\")}>\n                    <FontAwesomeIcon className=\"icon\" icon={faChevronLeft} />\n                </button>\n                <div>{module}</div>\n            </div>\n            <div className=\"content\">\n                {atts.length === 0 && (\n                    <div className=\"no-attempts-outer\">\n                        <div className=\"primary-btn unattempted-btn\">\n                            <Button onClick={showUnattemptedQuestions}>View Unattempted Questions</Button>\n                        </div>\n                        <div className=\"no-attempts-container\">\n                            <div className=\"no-attempts\">\n                                <div className=\"title\">\n                                    No data for this module.\n                                </div>\n                                <div className=\"subtitle\">\n                                    Add a question attempt to see statistics.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                {atts.length > 0 && (\n                    <>\n                        <div className=\"card graph-card\">\n                            <div className=\"graph\">\n                                <Graph graphData={graphData} />\n                            </div>\n                        </div>\n                        <div className=\"primary-btn unattempted-btn\">\n                            <Button onClick={showUnattemptedQuestions}>View Unattempted Questions</Button>\n                        </div>\n                        <Row className=\"items\">\n                            {atts.map((attempt) => (\n                                <Col xs={12} sm={6} md={4} lg={3} xl={2}>\n                                    <div className=\"card item\">\n                                        <div className=\"title\">\n                                            {attempt.question.year} P\n                                            {attempt.question.paper} Q\n                                            {attempt.question.question}\n                                        </div>\n                                        <div className=\"subtitle\">\n                                            Completed{\" \"}\n                                            {formatDate(attempt.dateCompleted)}\n                                        </div>\n                                        <div className=\"sections\">\n                                            <div\n                                                className={`first section ${getSectionColor(\n                                                    attempt.mark,\n                                                    20\n                                                )}`}\n                                            >\n                                                <div className=\"section-title\">\n                                                    Mark\n                                                </div>\n                                                <div className=\"section-content\">\n                                                    {attempt.mark}/20\n                                                </div>\n                                            </div>\n                                            <div\n                                                className={`second section blue`}\n                                            >\n                                                <div className=\"section-title\">\n                                                    Attempt\n                                                </div>\n                                                <div className=\"section-content\">\n                                                    {attempt.attemptNumber + 1}{\" \"}\n                                                    of{\" \"}\n                                                    {attempts\n                                                        .filter(\n                                                            (a) =>\n                                                                a.question\n                                                                    .id ===\n                                                                attempt.question\n                                                                    .id\n                                                        )\n                                                        .sort((a, b) =>\n                                                            a.attemptNumber >\n                                                            b.attemptNumber\n                                                                ? -1\n                                                                : 1\n                                                        )[0].attemptNumber + 1}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"btns\">\n                                            <div className=\"primary-btn button\">\n                                                <Button\n                                                    onClick={() =>\n                                                        openAttemptWindow(\n                                                            attempt\n                                                        )\n                                                    }\n                                                >\n                                                    Edit Attempt\n                                                </Button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Col>\n                            ))}\n                        </Row>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Module;\n"]},"metadata":{},"sourceType":"module"}