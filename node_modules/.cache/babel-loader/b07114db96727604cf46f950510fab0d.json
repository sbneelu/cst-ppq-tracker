{"ast":null,"code":"/*!\n  * chartjs-adapter-moment v1.0.0\n  * https://www.chartjs.org\n  * (c) 2021 chartjs-adapter-moment Contributors\n  * Released under the MIT license\n  */\nimport moment from 'moment';\nimport { _adapters } from 'chart.js';\nvar FORMATS = {\n  datetime: 'MMM D, YYYY, h:mm:ss a',\n  millisecond: 'h:mm:ss.SSS a',\n  second: 'h:mm:ss a',\n  minute: 'h:mm a',\n  hour: 'hA',\n  day: 'MMM D',\n  week: 'll',\n  month: 'MMM YYYY',\n  quarter: '[Q]Q - YYYY',\n  year: 'YYYY'\n};\n\n_adapters._date.override(typeof moment === 'function' ? {\n  _id: 'moment',\n  // DEBUG ONLY\n  formats: function formats() {\n    return FORMATS;\n  },\n  parse: function parse(value, format) {\n    if (typeof value === 'string' && typeof format === 'string') {\n      value = moment(value, format);\n    } else if (!(value instanceof moment)) {\n      value = moment(value);\n    }\n\n    return value.isValid() ? value.valueOf() : null;\n  },\n  format: function format(time, _format) {\n    return moment(time).format(_format);\n  },\n  add: function add(time, amount, unit) {\n    return moment(time).add(amount, unit).valueOf();\n  },\n  diff: function diff(max, min, unit) {\n    return moment(max).diff(moment(min), unit);\n  },\n  startOf: function startOf(time, unit, weekday) {\n    time = moment(time);\n\n    if (unit === 'isoWeek') {\n      weekday = Math.trunc(Math.min(Math.max(0, weekday), 6));\n      return time.isoWeekday(weekday).startOf('day').valueOf();\n    }\n\n    return time.startOf(unit).valueOf();\n  },\n  endOf: function endOf(time, unit) {\n    return moment(time).endOf(unit).valueOf();\n  }\n} : {});","map":{"version":3,"sources":["/home/sbneelu/Programming/ppq-tracker/node_modules/chartjs-adapter-moment/dist/chartjs-adapter-moment.esm.js"],"names":["moment","_adapters","FORMATS","datetime","millisecond","second","minute","hour","day","week","month","quarter","year","_date","override","_id","formats","parse","value","format","isValid","valueOf","time","add","amount","unit","diff","max","min","startOf","weekday","Math","trunc","isoWeekday","endOf"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,wBADI;AAEdC,EAAAA,WAAW,EAAE,eAFC;AAGdC,EAAAA,MAAM,EAAE,WAHM;AAIdC,EAAAA,MAAM,EAAE,QAJM;AAKdC,EAAAA,IAAI,EAAE,IALQ;AAMdC,EAAAA,GAAG,EAAE,OANS;AAOdC,EAAAA,IAAI,EAAE,IAPQ;AAQdC,EAAAA,KAAK,EAAE,UARO;AASdC,EAAAA,OAAO,EAAE,aATK;AAUdC,EAAAA,IAAI,EAAE;AAVQ,CAAhB;;AAaAX,SAAS,CAACY,KAAV,CAAgBC,QAAhB,CAAyB,OAAOd,MAAP,KAAkB,UAAlB,GAA+B;AACtDe,EAAAA,GAAG,EAAE,QADiD;AACvC;AAEfC,EAAAA,OAAO,EAAE,mBAAW;AAClB,WAAOd,OAAP;AACD,GALqD;AAOtDe,EAAAA,KAAK,EAAE,eAASC,KAAT,EAAgBC,MAAhB,EAAwB;AAC7B,QAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,OAAOC,MAAP,KAAkB,QAAnD,EAA6D;AAC3DD,MAAAA,KAAK,GAAGlB,MAAM,CAACkB,KAAD,EAAQC,MAAR,CAAd;AACD,KAFD,MAEO,IAAI,EAAED,KAAK,YAAYlB,MAAnB,CAAJ,EAAgC;AACrCkB,MAAAA,KAAK,GAAGlB,MAAM,CAACkB,KAAD,CAAd;AACD;;AACD,WAAOA,KAAK,CAACE,OAAN,KAAkBF,KAAK,CAACG,OAAN,EAAlB,GAAoC,IAA3C;AACD,GAdqD;AAgBtDF,EAAAA,MAAM,EAAE,gBAASG,IAAT,EAAeH,OAAf,EAAuB;AAC7B,WAAOnB,MAAM,CAACsB,IAAD,CAAN,CAAaH,MAAb,CAAoBA,OAApB,CAAP;AACD,GAlBqD;AAoBtDI,EAAAA,GAAG,EAAE,aAASD,IAAT,EAAeE,MAAf,EAAuBC,IAAvB,EAA6B;AAChC,WAAOzB,MAAM,CAACsB,IAAD,CAAN,CAAaC,GAAb,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BJ,OAA/B,EAAP;AACD,GAtBqD;AAwBtDK,EAAAA,IAAI,EAAE,cAASC,GAAT,EAAcC,GAAd,EAAmBH,IAAnB,EAAyB;AAC7B,WAAOzB,MAAM,CAAC2B,GAAD,CAAN,CAAYD,IAAZ,CAAiB1B,MAAM,CAAC4B,GAAD,CAAvB,EAA8BH,IAA9B,CAAP;AACD,GA1BqD;AA4BtDI,EAAAA,OAAO,EAAE,iBAASP,IAAT,EAAeG,IAAf,EAAqBK,OAArB,EAA8B;AACrCR,IAAAA,IAAI,GAAGtB,MAAM,CAACsB,IAAD,CAAb;;AACA,QAAIG,IAAI,KAAK,SAAb,EAAwB;AACtBK,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,GAAL,CAASG,IAAI,CAACJ,GAAL,CAAS,CAAT,EAAYG,OAAZ,CAAT,EAA+B,CAA/B,CAAX,CAAV;AACA,aAAOR,IAAI,CAACW,UAAL,CAAgBH,OAAhB,EAAyBD,OAAzB,CAAiC,KAAjC,EAAwCR,OAAxC,EAAP;AACD;;AACD,WAAOC,IAAI,CAACO,OAAL,CAAaJ,IAAb,EAAmBJ,OAAnB,EAAP;AACD,GAnCqD;AAqCtDa,EAAAA,KAAK,EAAE,eAASZ,IAAT,EAAeG,IAAf,EAAqB;AAC1B,WAAOzB,MAAM,CAACsB,IAAD,CAAN,CAAaY,KAAb,CAAmBT,IAAnB,EAAyBJ,OAAzB,EAAP;AACD;AAvCqD,CAA/B,GAwCrB,EAxCJ","sourcesContent":["/*!\n  * chartjs-adapter-moment v1.0.0\n  * https://www.chartjs.org\n  * (c) 2021 chartjs-adapter-moment Contributors\n  * Released under the MIT license\n  */\nimport moment from 'moment';\nimport { _adapters } from 'chart.js';\n\nconst FORMATS = {\n  datetime: 'MMM D, YYYY, h:mm:ss a',\n  millisecond: 'h:mm:ss.SSS a',\n  second: 'h:mm:ss a',\n  minute: 'h:mm a',\n  hour: 'hA',\n  day: 'MMM D',\n  week: 'll',\n  month: 'MMM YYYY',\n  quarter: '[Q]Q - YYYY',\n  year: 'YYYY'\n};\n\n_adapters._date.override(typeof moment === 'function' ? {\n  _id: 'moment', // DEBUG ONLY\n\n  formats: function() {\n    return FORMATS;\n  },\n\n  parse: function(value, format) {\n    if (typeof value === 'string' && typeof format === 'string') {\n      value = moment(value, format);\n    } else if (!(value instanceof moment)) {\n      value = moment(value);\n    }\n    return value.isValid() ? value.valueOf() : null;\n  },\n\n  format: function(time, format) {\n    return moment(time).format(format);\n  },\n\n  add: function(time, amount, unit) {\n    return moment(time).add(amount, unit).valueOf();\n  },\n\n  diff: function(max, min, unit) {\n    return moment(max).diff(moment(min), unit);\n  },\n\n  startOf: function(time, unit, weekday) {\n    time = moment(time);\n    if (unit === 'isoWeek') {\n      weekday = Math.trunc(Math.min(Math.max(0, weekday), 6));\n      return time.isoWeekday(weekday).startOf('day').valueOf();\n    }\n    return time.startOf(unit).valueOf();\n  },\n\n  endOf: function(time, unit) {\n    return moment(time).endOf(unit).valueOf();\n  }\n} : {});\n"]},"metadata":{},"sourceType":"module"}