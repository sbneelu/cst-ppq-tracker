{"ast":null,"code":"import _toConsumableArray from\"/home/sbneelu/Programming/ppq-tracker/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/sbneelu/Programming/ppq-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import questionModulesJson from\"./questions_modules.json\";import moduleQuestionsJson from\"./module_questions.json\";var sum=function sum(a){return a.reduce(function(p,v){return p+v;},0);};var questionModules=questionModulesJson;var moduleQuestions=moduleQuestionsJson;var getModuleForQuestion=function getModuleForQuestion(question){return questionModules[question];};var getQuestionsForModule=function getQuestionsForModule(module){return moduleQuestions[module];};function getAttempts(){var attemptsString=localStorage.getItem(\"attempts\");if(!attemptsString)return[];return JSON.parse(attemptsString);}function getModules(){var attempts=getAttempts();var modules={};for(var i=0;i<attempts.length;i++){var attempt=attempts[i];var _question=attempt.question,mark=attempt.mark;var id=_question.id,_module=_question.module;if(!(_module in modules))modules[_module]={};if(!(id in modules[_module]))modules[_module][id]=[0,0];modules[_module][id][0]++;modules[_module][id][1]+=mark;}var result=[];for(var _i=0,_Object$entries=Object.entries(modules);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),_module2=_Object$entries$_i[0],questions=_Object$entries$_i[1];var questionsArray=Object.entries(questions);var length=questionsArray.length;var totalMarks=questionsArray.map(function(q){return q[1][1];});var totalAttempts=questionsArray.map(function(q){return q[1][0];});var _averageMark=Math.round(sum(totalMarks)/sum(totalAttempts));var numOfQuestions=moduleQuestions[_module2].length;var _hidden=getHiddenModules().indexOf(_module2)>-1;result.push([_module2,_hidden,length,numOfQuestions,_averageMark]);}for(var _i2=0,_Object$keys=Object.keys(moduleQuestions);_i2<_Object$keys.length;_i2++){var _module3=_Object$keys[_i2];if(!(_module3 in modules))result.push([_module3,getHiddenModules().indexOf(_module3)>-1,0,moduleQuestions[_module3].length,NaN]);}return result;}function getAttemptsForModule(module){var attempts=getAttempts();var moduleAttempts=attempts.filter(function(attempt){return attempt.question.module===module;});moduleAttempts.sort(function(m1,m2){return m1.date<m2.date?-1:m1.date>m2.date?1:0;});return moduleAttempts;}function addAttempt(attempt){if(attempt.question.id===\"\")attempt.question.id=\"\".concat(attempt.question.year,\"/\").concat(attempt.question.paper,\"/\").concat(attempt.question.question);var attempts=getAttempts();if(attempt.attemptNumber>=0)attempts=attempts.filter(function(m){return m.id!==attempt.id;});else attempt.attemptNumber=Math.max.apply(Math,_toConsumableArray(attempts.filter(function(m){return m.question.id===attempt.question.id;}).map(function(m){return m.attemptNumber;})))+1;if(attempt.attemptNumber===-Infinity)attempt.attemptNumber=0;attempt.id=\"\".concat(attempt.question.id,\"-\").concat(attempt.attemptNumber);attempts.push(attempt);var attemptsString=JSON.stringify(attempts);localStorage.setItem(\"attempts\",attemptsString);return attempts;}function deleteAttempt(attemptId){var attempts=getAttempts();attempts=attempts.filter(function(attempt){return attempt.id!==attemptId;});var attemptsString=JSON.stringify(attempts);localStorage.setItem(\"attempts\",attemptsString);localStorage.setItem(\"attempts\",attemptsString);}function getSectionColor(numerator,denominator){var r=numerator/denominator;if(isNaN(r))return\"gray\";else if(r<0.4)return\"red\";else if(r<0.7)return\"amber\";else return\"green\";}function getHiddenModules(){var hiddenModulesString=localStorage.getItem(\"hiddenModules\");var hiddenModules=hiddenModulesString===null?[]:JSON.parse(hiddenModulesString);return hiddenModules;}function hideModule(module){var hiddenModules=getHiddenModules();hiddenModules.push(module);localStorage.setItem(\"hiddenModules\",JSON.stringify(hiddenModules));}function unhideModule(module){var hiddenModules=getHiddenModules();hiddenModules=hiddenModules.filter(function(m){return m!==module;});localStorage.setItem(\"hiddenModules\",JSON.stringify(hiddenModules));}export{addAttempt,getAttempts,deleteAttempt,getAttemptsForModule,getModules,getModuleForQuestion,getQuestionsForModule,getSectionColor,getHiddenModules,hideModule,unhideModule};","map":{"version":3,"sources":["/home/sbneelu/Programming/ppq-tracker/src/utils/utils.ts"],"names":["questionModulesJson","moduleQuestionsJson","sum","a","reduce","p","v","questionModules","moduleQuestions","getModuleForQuestion","question","getQuestionsForModule","module","getAttempts","attemptsString","localStorage","getItem","JSON","parse","getModules","attempts","modules","i","length","attempt","mark","id","result","Object","entries","questions","questionsArray","totalMarks","map","q","totalAttempts","averageMark","Math","round","numOfQuestions","hidden","getHiddenModules","indexOf","push","keys","NaN","getAttemptsForModule","moduleAttempts","filter","sort","m1","m2","date","addAttempt","year","paper","attemptNumber","m","max","Infinity","stringify","setItem","deleteAttempt","attemptId","getSectionColor","numerator","denominator","r","isNaN","hiddenModulesString","hiddenModules","hideModule","unhideModule"],"mappings":"8PAAA,MAAOA,CAAAA,mBAAP,KAAgC,0BAAhC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,yBAAhC,CAkBA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,CAAD,QAAiBA,CAAAA,CAAC,CAACC,MAAF,CAAS,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAAT,CAA0B,CAA1B,CAAjB,EAAZ,CAEA,GAAMC,CAAAA,eAA+C,CAAGP,mBAAxD,CACA,GAAMQ,CAAAA,eAA+C,CAAGP,mBAAxD,CAEA,GAAMQ,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,QAAD,QACzBH,CAAAA,eAAe,CAACG,QAAD,CADU,EAA7B,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,MAAD,QAC1BJ,CAAAA,eAAe,CAACI,MAAD,CADW,EAA9B,CAGA,QAASC,CAAAA,WAAT,EAA0C,CACtC,GAAMC,CAAAA,cAAc,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAvB,CACA,GAAI,CAACF,cAAL,CAAqB,MAAO,EAAP,CACrB,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,cAAX,CAAP,CACH,CAED,QAASK,CAAAA,UAAT,EAMI,CACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,OAIL,CAAG,EAJJ,CAKA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,QAAQ,CAACG,MAA7B,CAAqCD,CAAC,EAAtC,CAA0C,CACtC,GAAME,CAAAA,OAAO,CAAGJ,QAAQ,CAACE,CAAD,CAAxB,CACA,GAAQZ,CAAAA,SAAR,CAA2Bc,OAA3B,CAAQd,QAAR,CAAkBe,IAAlB,CAA2BD,OAA3B,CAAkBC,IAAlB,CACA,GAAQC,CAAAA,EAAR,CAAuBhB,SAAvB,CAAQgB,EAAR,CAAYd,OAAZ,CAAuBF,SAAvB,CAAYE,MAAZ,CACA,GAAI,EAAEA,OAAM,GAAIS,CAAAA,OAAZ,CAAJ,CAA0BA,OAAO,CAACT,OAAD,CAAP,CAAkB,EAAlB,CAC1B,GAAI,EAAEc,EAAE,GAAIL,CAAAA,OAAO,CAACT,OAAD,CAAf,CAAJ,CAA8BS,OAAO,CAACT,OAAD,CAAP,CAAgBc,EAAhB,EAAsB,CAAC,CAAD,CAAI,CAAJ,CAAtB,CAC9BL,OAAO,CAACT,OAAD,CAAP,CAAgBc,EAAhB,EAAoB,CAApB,IACAL,OAAO,CAACT,OAAD,CAAP,CAAgBc,EAAhB,EAAoB,CAApB,GAA0BD,IAA1B,CACH,CACD,GAAME,CAAAA,MAAmD,CAAG,EAA5D,CAEA,6BAAkCC,MAAM,CAACC,OAAP,CAAeR,OAAf,CAAlC,gCAA2D,CAAtD,6DAAOT,QAAP,uBAAekB,SAAf,uBACD,GAAMC,CAAAA,cAAc,CAAGH,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAvB,CACA,GAAMP,CAAAA,MAAM,CAAGQ,cAAc,CAACR,MAA9B,CACA,GAAMS,CAAAA,UAAU,CAAGD,cAAc,CAACE,GAAf,CAAmB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAP,EAAnB,CAAnB,CACA,GAAMC,CAAAA,aAAa,CAAGJ,cAAc,CAACE,GAAf,CAAmB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAP,EAAnB,CAAtB,CACA,GAAME,CAAAA,YAAW,CAAGC,IAAI,CAACC,KAAL,CAAWpC,GAAG,CAAC8B,UAAD,CAAH,CAAkB9B,GAAG,CAACiC,aAAD,CAAhC,CAApB,CACA,GAAMI,CAAAA,cAAc,CAAG/B,eAAe,CAACI,QAAD,CAAf,CAAwBW,MAA/C,CACA,GAAMiB,CAAAA,OAAM,CAAGC,gBAAgB,GAAGC,OAAnB,CAA2B9B,QAA3B,EAAqC,CAAC,CAArD,CACAe,MAAM,CAACgB,IAAP,CAAY,CAAC/B,QAAD,CAAS4B,OAAT,CAAiBjB,MAAjB,CAAyBgB,cAAzB,CAAyCH,YAAzC,CAAZ,EACH,CAED,2BAAmBR,MAAM,CAACgB,IAAP,CAAYpC,eAAZ,CAAnB,+BAAiD,CAA5C,GAAII,CAAAA,QAAM,kBAAV,CACD,GAAI,EAAEA,QAAM,GAAIS,CAAAA,OAAZ,CAAJ,CACIM,MAAM,CAACgB,IAAP,CAAY,CACR/B,QADQ,CAER6B,gBAAgB,GAAGC,OAAnB,CAA2B9B,QAA3B,EAAqC,CAAC,CAF9B,CAGR,CAHQ,CAIRJ,eAAe,CAACI,QAAD,CAAf,CAAwBW,MAJhB,CAKRsB,GALQ,CAAZ,EAOP,CAED,MAAOlB,CAAAA,MAAP,CACH,CAED,QAASmB,CAAAA,oBAAT,CAA8BlC,MAA9B,CAAiE,CAC7D,GAAMQ,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMkC,CAAAA,cAAc,CAAG3B,QAAQ,CAAC4B,MAAT,CACnB,SAACxB,OAAD,QAAaA,CAAAA,OAAO,CAACd,QAAR,CAAiBE,MAAjB,GAA4BA,MAAzC,EADmB,CAAvB,CAGAmC,cAAc,CAACE,IAAf,CAAoB,SAACC,EAAD,CAAKC,EAAL,QAChBD,CAAAA,EAAE,CAACE,IAAH,CAAUD,EAAE,CAACC,IAAb,CAAoB,CAAC,CAArB,CAAyBF,EAAE,CAACE,IAAH,CAAUD,EAAE,CAACC,IAAb,CAAoB,CAApB,CAAwB,CADjC,EAApB,EAGA,MAAOL,CAAAA,cAAP,CACH,CAED,QAASM,CAAAA,UAAT,CAAoB7B,OAApB,CAAiE,CAC7D,GAAIA,OAAO,CAACd,QAAR,CAAiBgB,EAAjB,GAAwB,EAA5B,CACIF,OAAO,CAACd,QAAR,CAAiBgB,EAAjB,WAAyBF,OAAO,CAACd,QAAR,CAAiB4C,IAA1C,aAAkD9B,OAAO,CAACd,QAAR,CAAiB6C,KAAnE,aAA4E/B,OAAO,CAACd,QAAR,CAAiBA,QAA7F,EACJ,GAAIU,CAAAA,QAAQ,CAAGP,WAAW,EAA1B,CACA,GAAIW,OAAO,CAACgC,aAAR,EAAyB,CAA7B,CACIpC,QAAQ,CAAGA,QAAQ,CAAC4B,MAAT,CAAgB,SAACS,CAAD,QAAOA,CAAAA,CAAC,CAAC/B,EAAF,GAASF,OAAO,CAACE,EAAxB,EAAhB,CAAX,CADJ,IAGIF,CAAAA,OAAO,CAACgC,aAAR,CACInB,IAAI,CAACqB,GAAL,OAAArB,IAAI,oBACGjB,QAAQ,CACN4B,MADF,CACS,SAACS,CAAD,QAAOA,CAAAA,CAAC,CAAC/C,QAAF,CAAWgB,EAAX,GAAkBF,OAAO,CAACd,QAAR,CAAiBgB,EAA1C,EADT,EAEEO,GAFF,CAEM,SAACwB,CAAD,QAAOA,CAAAA,CAAC,CAACD,aAAT,EAFN,CADH,EAAJ,CAII,CALR,CAMJ,GAAIhC,OAAO,CAACgC,aAAR,GAA0B,CAACG,QAA/B,CAAyCnC,OAAO,CAACgC,aAAR,CAAwB,CAAxB,CACzChC,OAAO,CAACE,EAAR,WAAgBF,OAAO,CAACd,QAAR,CAAiBgB,EAAjC,aAAuCF,OAAO,CAACgC,aAA/C,EACApC,QAAQ,CAACuB,IAAT,CAAcnB,OAAd,EACA,GAAMV,CAAAA,cAAc,CAAGG,IAAI,CAAC2C,SAAL,CAAexC,QAAf,CAAvB,CACAL,YAAY,CAAC8C,OAAb,CAAqB,UAArB,CAAiC/C,cAAjC,EACA,MAAOM,CAAAA,QAAP,CACH,CAED,QAAS0C,CAAAA,aAAT,CAAuBC,SAAvB,CAAgD,CAC5C,GAAI3C,CAAAA,QAAQ,CAAGP,WAAW,EAA1B,CACAO,QAAQ,CAAGA,QAAQ,CAAC4B,MAAT,CAAgB,SAACxB,OAAD,QAAaA,CAAAA,OAAO,CAACE,EAAR,GAAeqC,SAA5B,EAAhB,CAAX,CACA,GAAMjD,CAAAA,cAAc,CAAGG,IAAI,CAAC2C,SAAL,CAAexC,QAAf,CAAvB,CACAL,YAAY,CAAC8C,OAAb,CAAqB,UAArB,CAAiC/C,cAAjC,EACAC,YAAY,CAAC8C,OAAb,CAAqB,UAArB,CAAiC/C,cAAjC,EACH,CAED,QAASkD,CAAAA,eAAT,CAAyBC,SAAzB,CAA4CC,WAA5C,CAAiE,CAC7D,GAAMC,CAAAA,CAAC,CAAGF,SAAS,CAAGC,WAAtB,CACA,GAAIE,KAAK,CAACD,CAAD,CAAT,CAAc,MAAO,MAAP,CAAd,IACK,IAAIA,CAAC,CAAG,GAAR,CAAa,MAAO,KAAP,CAAb,IACA,IAAIA,CAAC,CAAG,GAAR,CAAa,MAAO,OAAP,CAAb,IACA,OAAO,OAAP,CACR,CAED,QAAS1B,CAAAA,gBAAT,EAA4B,CACxB,GAAM4B,CAAAA,mBAAmB,CAAGtD,YAAY,CAACC,OAAb,CAAqB,eAArB,CAA5B,CACA,GAAMsD,CAAAA,aAAuB,CACzBD,mBAAmB,GAAK,IAAxB,CAA+B,EAA/B,CAAoCpD,IAAI,CAACC,KAAL,CAAWmD,mBAAX,CADxC,CAEA,MAAOC,CAAAA,aAAP,CACH,CAED,QAASC,CAAAA,UAAT,CAAoB3D,MAApB,CAAoC,CAChC,GAAM0D,CAAAA,aAAa,CAAG7B,gBAAgB,EAAtC,CACA6B,aAAa,CAAC3B,IAAd,CAAmB/B,MAAnB,EACAG,YAAY,CAAC8C,OAAb,CAAqB,eAArB,CAAsC5C,IAAI,CAAC2C,SAAL,CAAeU,aAAf,CAAtC,EACH,CAED,QAASE,CAAAA,YAAT,CAAsB5D,MAAtB,CAAsC,CAClC,GAAI0D,CAAAA,aAAa,CAAG7B,gBAAgB,EAApC,CACA6B,aAAa,CAAGA,aAAa,CAACtB,MAAd,CAAqB,SAACS,CAAD,QAAOA,CAAAA,CAAC,GAAK7C,MAAb,EAArB,CAAhB,CACAG,YAAY,CAAC8C,OAAb,CAAqB,eAArB,CAAsC5C,IAAI,CAAC2C,SAAL,CAAeU,aAAf,CAAtC,EACH,CAGD,OACIjB,UADJ,CAEIxC,WAFJ,CAGIiD,aAHJ,CAIIhB,oBAJJ,CAKI3B,UALJ,CAMIV,oBANJ,CAOIE,qBAPJ,CAQIqD,eARJ,CASIvB,gBATJ,CAUI8B,UAVJ,CAWIC,YAXJ","sourcesContent":["import questionModulesJson from \"./questions_modules.json\";\nimport moduleQuestionsJson from \"./module_questions.json\";\n\ninterface Question {\n    year: number;\n    paper: string;\n    question: number;\n    module: string;\n    id: string;\n}\n\ninterface QuestionAttempt {\n    question: Question;\n    mark: number;\n    attemptNumber: number;\n    date: string;\n    id: string;\n}\n\nconst sum = (a: number[]) => a.reduce((p, v) => p + v, 0);\n\nconst questionModules: { [question: string]: string } = questionModulesJson;\nconst moduleQuestions: { [module: string]: string[] } = moduleQuestionsJson;\n\nconst getModuleForQuestion = (question: string): string | undefined =>\n    questionModules[question];\nconst getQuestionsForModule = (module: string): string[] | undefined =>\n    moduleQuestions[module];\n\nfunction getAttempts(): QuestionAttempt[] {\n    const attemptsString = localStorage.getItem(\"attempts\");\n    if (!attemptsString) return [];\n    return JSON.parse(attemptsString);\n}\n\nfunction getModules(): [\n    module: string,\n    hidden: boolean,\n    questionsDone: number,\n    questionsInModule: number,\n    averageMark: number\n][] {\n    const attempts = getAttempts();\n    const modules: {\n        [module: string]: {\n            [question: string]: [attempts: number, totalMark: number];\n        };\n    } = {};\n    for (let i = 0; i < attempts.length; i++) {\n        const attempt = attempts[i];\n        const { question, mark } = attempt;\n        const { id, module } = question;\n        if (!(module in modules)) modules[module] = {};\n        if (!(id in modules[module])) modules[module][id] = [0, 0];\n        modules[module][id][0]++;\n        modules[module][id][1] += mark;\n    }\n    const result: [string, boolean, number, number, number][] = [];\n\n    for (const [module, questions] of Object.entries(modules)) {\n        const questionsArray = Object.entries(questions);\n        const length = questionsArray.length;\n        const totalMarks = questionsArray.map((q) => q[1][1]);\n        const totalAttempts = questionsArray.map((q) => q[1][0]);\n        const averageMark = Math.round(sum(totalMarks) / sum(totalAttempts));\n        const numOfQuestions = moduleQuestions[module].length;\n        const hidden = getHiddenModules().indexOf(module) > -1;\n        result.push([module, hidden, length, numOfQuestions, averageMark]);\n    }\n\n    for (let module of Object.keys(moduleQuestions)) {\n        if (!(module in modules))\n            result.push([\n                module,\n                getHiddenModules().indexOf(module) > -1,\n                0,\n                moduleQuestions[module].length,\n                NaN,\n            ]);\n    }\n\n    return result;\n}\n\nfunction getAttemptsForModule(module: string): QuestionAttempt[] {\n    const attempts = getAttempts();\n    const moduleAttempts = attempts.filter(\n        (attempt) => attempt.question.module === module\n    );\n    moduleAttempts.sort((m1, m2) =>\n        m1.date < m2.date ? -1 : m1.date > m2.date ? 1 : 0\n    );\n    return moduleAttempts;\n}\n\nfunction addAttempt(attempt: QuestionAttempt): QuestionAttempt[] {\n    if (attempt.question.id === \"\")\n        attempt.question.id = `${attempt.question.year}/${attempt.question.paper}/${attempt.question.question}`;\n    let attempts = getAttempts();\n    if (attempt.attemptNumber >= 0)\n        attempts = attempts.filter((m) => m.id !== attempt.id);\n    else\n        attempt.attemptNumber =\n            Math.max(\n                ...attempts\n                    .filter((m) => m.question.id === attempt.question.id)\n                    .map((m) => m.attemptNumber)\n            ) + 1;\n    if (attempt.attemptNumber === -Infinity) attempt.attemptNumber = 0;\n    attempt.id = `${attempt.question.id}-${attempt.attemptNumber}`;\n    attempts.push(attempt);\n    const attemptsString = JSON.stringify(attempts);\n    localStorage.setItem(\"attempts\", attemptsString);\n    return attempts;\n}\n\nfunction deleteAttempt(attemptId: string): void {\n    let attempts = getAttempts();\n    attempts = attempts.filter((attempt) => attempt.id !== attemptId);\n    const attemptsString = JSON.stringify(attempts);\n    localStorage.setItem(\"attempts\", attemptsString);\n    localStorage.setItem(\"attempts\", attemptsString);\n}\n\nfunction getSectionColor(numerator: number, denominator: number) {\n    const r = numerator / denominator;\n    if (isNaN(r)) return \"gray\";\n    else if (r < 0.4) return \"red\";\n    else if (r < 0.7) return \"amber\";\n    else return \"green\";\n}\n\nfunction getHiddenModules() {\n    const hiddenModulesString = localStorage.getItem(\"hiddenModules\");\n    const hiddenModules: string[] =\n        hiddenModulesString === null ? [] : JSON.parse(hiddenModulesString);\n    return hiddenModules;\n}\n\nfunction hideModule(module: string) {\n    const hiddenModules = getHiddenModules();\n    hiddenModules.push(module);\n    localStorage.setItem(\"hiddenModules\", JSON.stringify(hiddenModules));\n}\n\nfunction unhideModule(module: string) {\n    let hiddenModules = getHiddenModules();\n    hiddenModules = hiddenModules.filter((m) => m !== module);\n    localStorage.setItem(\"hiddenModules\", JSON.stringify(hiddenModules));\n}\n\nexport type { QuestionAttempt };\nexport {\n    addAttempt,\n    getAttempts,\n    deleteAttempt,\n    getAttemptsForModule,\n    getModules,\n    getModuleForQuestion,\n    getQuestionsForModule,\n    getSectionColor,\n    getHiddenModules,\n    hideModule,\n    unhideModule,\n};\n"]},"metadata":{},"sourceType":"module"}